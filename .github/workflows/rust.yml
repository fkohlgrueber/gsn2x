name: CI/CD

on:
  push:
    branches: [ master ]
    tags:
      - v[0-9]+\.[0-9]+\.[0-9]+
  pull_request:
    branches: [ master ]


env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
    - name: Annotate commit with clippy warnings
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features
    - name: Security audit
      uses: actions-rs/audit-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
  
  license_check:
    runs-on: ubuntu-latest

    steps:
    - name: License check
      run: |
        cargo install cargo-lichking
        cargo lichking check --all

  build_test_deploy:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout 
      uses: actions/checkout@v2
    - name: Build
      run: cargo build --verbose
    - name: Release build
      run: cargo build --release --verbose
    - name: Test
      run: cargo test --verbose
    - name: Strip binaries
      if: hashFiles('target/release/gsn2x')
      run: |
        strip target/release/gsn2x
        cp target/release/gsn2x gsn2x.${{ runner.os }}
    - name: Strip binaries (Windows)
      if: hashFiles('target/release/gsn2x.exe')
      run: |
        strip target/release/gsn2x.exe
        copy target/release/gsn2x.exe gsn2x.${{ runner.os }}.exe
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: gsn2x
        path: gsn2x.${{ runner.os }}
    - name: Deploy pre-release to github.com
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-${{ matrix.os }}"
        prerelease: true
        title: "Latest build for ${{ matrix.os }}"
        files: |
          target/release/gsn2x
          target/release/gsn2x.exe
 
  release:
    needs: build_test_deploy
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') }}

    steps:
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Deploy release to github.com
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ steps.get_version.outputs.VERSION }}
        prerelease: false
        title: ${{ github.event.head_commit.message }}
        files: |
          gsn2x.Linux
          gsn2x.Macos
          gsn2x.Windows.exe

  coverage:
    needs: build_test_deploy
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    # coverage measurement needs a nightly toolchain with llvm-tools
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly
        components: llvm-tools-preview
    - name: Coverage measurement
      continue-on-error: true
      run: |
         mkdir coverage
         cargo +nightly install cargo-llvm-cov
         cargo +nightly llvm-cov --no-report --tests
         cargo +nightly llvm-cov run --no-report -- example.gsn.yaml
         cargo +nightly llvm-cov --no-run --lcov --output-path=coverage/coverage.lcov
    - name: Upload to codecov
      uses: codecov/codecov-action@v1
      with:
        directory: coverage


